# Gradient Workflow Tutorial
#
# This is the YAML file used to run the Gradient modeling Workflow for the sample project based on StyleGAN2 at
# https://docs.paperspace.com.
#
#
# Last updated: Dec 07 2021
#
# Trigger Workflow to run on any update (commit) to the repository when linked to a Gradient project
# (uncomment to activate)

on:
 github:
   branches:
     only: main

jobs:

  # 1. Clone StyleGAN repo into managed storage provider dataset

  cloneStyleGAN2Repo:
    resources:
      instance-type: C4
    outputs:
      repo:
        type: volume
    uses: git-checkout@v1
    with:
      url: https://github.com/NVlabs/stylegan2.git

  # 2. Get pretrained cat model

  # The model .pkl is large so is not in the main StyleGAN2 repo
  # We copy the .pkl in this step, then refer to the copy via getPretrainedModelCats.outputs.pretrainedNetwork
  # below to avoid copying it again in the next steps

  trainOurModel:
    resources:
      instance-type: P4000 # Or P6000, V100
    needs:
      - cloneStyleGAN2Repo
    inputs:
      extractedImagesForTraining:
        type: dataset
        with:
          ref: gradient/stylegan2-workflows-sample-project-extr-img
          #ref: stylegan2-wsp-extr-img
      repo: cloneStyleGAN2Repo.outputs.repo
    outputs:
      ourTrainedNetwork:
        type: dataset
        with:
          ref: stylegan2-wsp-our-trained-network
    uses: script@v1
    with:
      script: |-
        pip install scipy==1.3.3
        pip install requests==2.22.0
        pip install Pillow==6.2.1
        cp -R /inputs/repo /stylegan2
        cp -R /inputs/extractedImagesForTraining/cat_images_tfrecords /stylegan2
        cd /stylegan2
        python run_training.py \
          --data-dir=/stylegan2/cat_images_tfrecords \
          --config=config-f \
          --dataset=cat \
          --total-kimg=10 \
          --result-dir=/outputs/ourTrainedNetwork
        ls "-aFlR" /outputs
      image: tensorflow/tensorflow:1.14.0-gpu-py3

  evaluateOurModel:
    resources:
      instance-type: P4000 # Or P6000, V100
    needs:
      - cloneStyleGAN2Repo
      - trainOurModel
    inputs:
      repo: cloneStyleGAN2Repo.outputs.repo
      extractedImagesForTraining:
        type: dataset
        with:
          ref: gradient/stylegan2-workflows-sample-project-extr-img
          #ref: stylegan2-wsp-extr-img
      ourTrainedNetwork: trainOurModel.outputs.ourTrainedNetwork
    outputs:
      evaluationOurs:
        type: dataset
        with:
          ref: stylegan2-wsp-evaluation-ours
    uses: script@v1
    with:
      script: |-
        pip install scipy==1.3.3
        pip install requests==2.22.0
        pip install Pillow==6.2.1
        cp -R /inputs/repo /stylegan2
        cp -R /inputs/extractedImagesForTraining/cat_images_tfrecords /stylegan2
        cp    /inputs/ourTrainedNetwork/00000-stylegan2-cat-1gpu-config-f/network-final.pkl /stylegan2
        cd /stylegan2
        python run_metrics.py \
          --data-dir=/stylegan2/cat_images_tfrecords \
          --network=/stylegan2/network-final.pkl \
          --metrics=fid50k,ppl2_wend \
          --dataset=cat \
          --result-dir=/outputs/evaluationOurs
        ls "-aFlR" /outputs
      image: tensorflow/tensorflow:1.14.0-gpu-py3

  # 7. Show generating images with our trained model

  generateImagesOurModel:
    resources:
      instance-type: P4000
    needs:
      - cloneStyleGAN2Repo
      - trainOurModel
    inputs:
      repo: cloneStyleGAN2Repo.outputs.repo
      ourTrainedNetwork: trainOurModel.outputs.ourTrainedNetwork
    outputs:
      generatedCatsOurs:
        type: dataset
        with:
          ref: stylegan2-wsp-generated-cats-ours
    uses: script@v1
    with:
      script: |-
        pip install scipy==1.3.3
        pip install requests==2.22.0
        pip install Pillow==6.2.1
        cp -R /inputs/repo /stylegan2
        cp    /inputs/ourTrainedNetwork/00000-stylegan2-cat-1gpu-config-f/network-final.pkl /stylegan2
        cd /stylegan2
        python run_generator.py generate-images \
          --network=/stylegan2/network-final.pkl \
          --seeds=6600-6605 \
          --truncation-psi=0.5 \
          --result-dir=/outputs/generatedCatsOurs
        ls "-aFlR" /outputs
      image: tensorflow/tensorflow:1.14.0-gpu-py3